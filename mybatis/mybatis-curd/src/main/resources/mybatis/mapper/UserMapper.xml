<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="name.guolanren.mapper.UserMapper">

    <sql id="table">
        user
    </sql>

    <sql id="select_columns">
        id, name, age, gid
    </sql>

    <resultMap id="vo_map" type="UserVO">
        <!-- 如果没有无参构造器 -->
        <!--<constructor>-->
            <!--<idArg column="id" javaType="Long"/>-->
            <!--<arg column="name" javaType="String"/>-->
        <!--</constructor>-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <association property="goal" column="gid" fetchType="eager" select="name.guolanren.mapper.GoalMapper.get"/>
        <collection property="pcs" column="id" fetchType="lazy" select="name.guolanren.mapper.PcMapper.getByBelongTo"/>
        <collection property="languages" column="id" fetchType="lazy" select="name.guolanren.mapper.LanguageMapper.getByUserId"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO <include refid="table"/> (name, age, gid)
        VALUES (#{name}, #{age}, #{gid})
    </insert>

    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO <include refid="table"/> (name, age, gid)
        VALUES
        <foreach collection="users" item="user" index="index" open="" close="" separator=",">
            (#{user.name}, #{user.age}, #{user.gid})
        </foreach>
    </insert>

    <delete id="delete">
        DELETE FROM <include refid="table"/>
        WHERE id = #{id}
    </delete>

    <update id="update">
        UPDATE <include refid="table"/>
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="gid != null">
                gid = #{gid},
            </if>
            id = #{id},
        </set>
        WHERE id = #{id}
    </update>

    <select id="get" parameterType="long" resultType="User" flushCache="false" useCache="true" timeout="10" fetchSize="256">
        SELECT <include refid="select_columns"/>
        FROM <include refid="table"/>
        <where>
            <if test="id != null">
                AND id = #{id, jdbcType=BIGINT}
            </if>
            <!--<choose>-->
                <!--<when test="id != null"></when>-->
                <!--<when test="id == null"></when>-->
                <!--<otherwise></otherwise>-->
            <!--</choose>-->
        </where>
    </select>

    <select id="getVO" parameterType="long" resultMap="vo_map">
        SELECT <include refid="select_columns"/>
        FROM <include refid="table"/>
        <trim prefix="where" prefixOverrides="and |or ">
            <if test="id != null ">
                and id = #{id, jdbcType=BIGINT}
            </if>
        </trim>
    </select>

    <!--<cache-->
        <!--eviction="LRU"-->
        <!--flushInterval="60000"-->
        <!--size="1024"-->
        <!--readOnly="false"/>-->
</mapper>