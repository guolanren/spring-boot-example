<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leayun.bdc.dao.RoleMapper">

    <!-- 定义表名 -->
    <sql id="table">
        example_role
    </sql>

    <!-- 全字段(按照阿里巴巴java开发手册,包含id、gmt_create、gmt_modified字段) -->
    <sql id="all_columns">
        id, name, gmt_create, gmt_modified
    </sql>

    <!-- 除id外的全字段 -->
    <sql id="all_columns_except_id">
        name, gmt_create, gmt_modified
    </sql>

    <resultMap id="BaseResultMap" type="Role" >
        <id column="role_id" property="roleId"/>
        <result column="name" property="name"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
    </resultMap>

    <resultMap id="RoleVoResultMap" type="RoleVO" >
        <id column="role_id" property="roleId"/>
        <result column="name" property="name"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <collection property="privileges" column="role_id" fetchType="lazy"
                    select="com.leayun.bdc.dao.PrivilegeMapper.findPrivilegesByRoleId" />
    </resultMap>

    <!-- 插入操作 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO <include refid="table"/>
        (<include refid="all_columns_except_id"/>)
        VALUES
        (#{name}, #{gmtCreate}, #{gmtModified})
    </insert>

    <!-- 删除操作(根据id) -->
    <delete id="delete">
        DELETE FROM <include refid="table"/>
        WHERE role_id = #{roleId}
    </delete>

    <!-- 更新操作 -->
    <update id="update">
        UPDATE <include refid="table"/>
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            gmt_modified = #{gmtModified}
        </set>
        WHERE role_id = #{roleId}
    </update>

    <!-- 查询操作(根据id) -->
    <select id="findById" resultMap="BaseResultMap">
        SELECT
        role_id,
        name,
        gmt_create,
        gmt_modified
        FROM <include refid="table"/>
        WHERE role_id = #{roleId}
    </select>

    <!-- 获取全部操作(对于数据量大于1000的表，必须在分页的条件下调用) -->
    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        role_id,
        name,
        gmt_create,
        gmt_modified
        FROM <include refid="table"/>
    </select>

    <!-- 存在操作(根据id) -->
    <select id="exists" resultType="boolean">
        SELECT EXISTS(
        SELECT 1
        FROM <include refid="table"/>
        WHERE role_id = #{roleId}
        )
    </select>

    <!-- 根据系统用户id查找相应角色列表 -->
    <select id="findRolesBySysUserId" resultMap="RoleVoResultMap">
        SELECT DISTINCT
          r.role_id,
          r.name,
          r.gmt_create,
          r.gmt_modified
        FROM example_role r
          JOIN example_sys_user_role ur ON (r.role_id = ur.role_id)
        WHERE ur.sys_user_id = #{sysUserId}
    </select>

</mapper>