spring:
  # auto-configure
  #   为什么要排除DruidDataSourceAutoConfigure ？
  #   DruidDataSourceAutoConfigure会注入一个DataSourceWrapper，
  #   其会在原生的spring.datasource下找url,username,password等。
  #   而我们动态数据源的配置路径是变化的。
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  # dynamic-datasource
  datasource:
    druid:
      stat-view-servlet:
        loginUsername: admin
        loginPassword: 123456
        enabled: true
    dynamic:
      # 以下是全局默认值，可以全局更改
#      druid:
#        initial-size:
#        max-active:
#        min-idle:
#        max-wait:
#        time-between-eviction-runs-millis:
#        time-between-log-stats-millis:
#        stat-sqlmax-size:
#        min-evictable-idle-time-millis:
#        max-evictable-idle-time-millis:
#        test-while-idle:
#        test-on-borrow:
#        test-on-return:
#        validation-query:
#        validation-query-timeout:
#        use-global-datasource-stat:
#        async-init:
#        clear-filters-enable:
#        reset-stat-enable:
#        not-full-timeout-retry-count:
#        max-wait-thread-count:
#        fail-fast:
#        phyTimeout-millis:
#        keep-alive:
#        pool-prepared-statements:
#        init-variants:
#        init-global-variants:
#        use-unfair-lock:
#        kill-when-socket-read-timeout:
#        connection-properties:
#        max-pool-prepared-statement-per-connection-size:
#        init-connection-sqls:
#        share-prepared-statements:
#        connection-errorretry-attempts:
#        break-after-acquire-failure:
#        # 注意这个值和druid原生不一致，默认启动了stat,wall
#        filters: stat,wall
#        wall:
#          noneBaseStatementAllow:
#          callAllow:
#          selectAllow:
#          selectIntoAllow:
#          selectIntoOutfileAllow:
#          selectWhereAlwayTrueCheck:
#          selectHavingAlwayTrueCheck:
#          selectUnionCheck:
#          selectMinusCheck:
#          selectExceptCheck:
#          selectIntersectCheck:
#          createTableAllow:
#          dropTableAllow:
#          alterTableAllow:
#          renameTableAllow:
#          hintAllow:
#          lockTableAllow:
#          startTransactionAllow:
#          blockAllow:
#          conditionAndAlwayTrueAllow:
#          conditionAndAlwayFalseAllow:
#          conditionDoubleConstAllow:
#          conditionLikeTrueAllow:
#          selectAllColumnAllow:
#          deleteAllow:
#          deleteWhereAlwayTrueCheck:
#          deleteWhereNoneCheck:
#          updateAllow:
#          updateWhereAlayTrueCheck:
#          updateWhereNoneCheck:
#          insertAllow:
#          mergeAllow:
#          minusAllow:
#          intersectAllow:
#          replaceAllow:
#          setAllow:
#          commitAllow:
#          rollbackAllow:
#          useAllow:
#          multiStatementAllow:
#          truncateAllow:
#          commentAllow:
#          strictSyntaxCheck:
#          constArithmeticAllow:
#          limitZeroAllow:
#          describeAllow:
#          showAllow:
#          schemaCheck:
#          tableCheck:
#          functionCheck:
#          objectCheck:
#          variantCheck:
#          mustParameterized:
#          doPrivilegedAllow:
#          dir:
#          tenantTablePattern:
#          tenantColumn:
#          wrapAllow:
#          metadataAllow:
#          conditionOpXorAllow:
#          conditionOpBitwseAllow:
#          caseConditionConstAllow:
#          completeInsertValuesCheck:
#          insertValuesCheckSize:
#          selectLimit:
#        stat:
#          merge-sql:
#          log-slow-sql:
#          slow-sql-millis:
      primary: master
      datasource:
        master:
          username: ***
          password: ***
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3306/master?useUnicode=true&characterEncoding=utf-8&useSSL=true
          # 以下参数针对每个库可以重新设置druid参数
          # druid:
            # initial-size:
            # 比如oracle就需要重新设置这个
            # validation-query: select 1 FROM DUAL
            #（非全局参数）设置即表示启用加密,底层会自动帮你配置相关的连接参数和filter
            # public-key:
# 生成 publickey 和密码
# java -cp druid-1.1.10.jar com.alibaba.druid.filter.config.ConfigTools youpassword